#!/usr/bin/env ruby
require "aoj"
require "optparse"

def result_print(result)
  puts "Status: " + result[:status]
end

# params configuration 
params = {}
optparser = ARGV.options do |opt|
  opt.on("-t", "Post to Twitter") { params[:twitter] = true }
  opt.on("-g", "Submit to Gist")  { params[:gist] = true}
  opt.on("-p PROBLEM_ID", 
         "AOJ Problem ID. By default, detected by filename.") do |val|
           params[:problem] = val
         end
  opt.on("-l LANGUAGE", 
         "Language of your source. By default, detected by filename.") do |val|
           lang = val.to_sym
           unless Language.languages.include?(lang)
             raise StandardError.new("Language \"" + val + "\" is unsupported.")
           end
           params[:language] = lang
         end
end

# parse params
begin
  optparser.parse!
rescue => e
  puts "Invalid argument: " + e.message
  exit
end
filename = ARGV[0]
unless filename then
  puts "Invalid argument: Specify the file to be submitted."
  exit
end
problem  = params[:problem] || AOJ::Util.extract_problem(filename)
language = params[:language] || AOJ::Util.extract_language(filename)
solution = File.read(filename)

# AOJ
# submit
STDERR << "Submitting...\n"
STDERR << "Problem:  " << problem << "\n"
STDERR << "Language: " << language.to_s.capitalize << "\n"
STDERR << "Filename: " << filename << "\n"
begin
  AOJ::Submit.submit(solution, language, problem)
rescue => e
  puts e.message
  exit
end
 
# get result
result = AOJ::Result.fetch(problem)
unless result
  puts "Failed to fetch result."
  exit
end
result_print result

# Gist
gist_uri = nil
if params[:gist]
  gist_result = AOJ::Gist.post(filename, problem)
  puts gist_uri = gist_result["html_url"]
end

# Twitter
if params[:twitter] && AOJ::Twitter.enable?
  if params[:gist]
    AOJ::Twitter.post(result[:problem], result[:status], result[:language], gist_uri)
  else
    AOJ::Twitter.post(result[:problem], result[:status], result[:language])
  end
end
